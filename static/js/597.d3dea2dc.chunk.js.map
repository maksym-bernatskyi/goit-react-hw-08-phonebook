{"version":3,"file":"static/js/597.d3dea2dc.chunk.js","mappings":"qRAEaA,EAAQC,EAAAA,GAAAA,GAAH,2FAMLC,EAAOD,EAAAA,GAAAA,KAAH,4HAOJE,EAAQF,EAAAA,GAAAA,MAAH,0IAQLG,EAAeH,EAAAA,GAAAA,IAAH,+GAOZI,EAAYJ,EAAAA,GAAAA,GAAH,gEAKTK,EAAQL,EAAAA,GAAAA,MAAH,mqBAyBLM,EAASN,EAAAA,GAAAA,OAAH,0qB,UCgCnB,EArFiB,WAAO,IAAD,IACbO,GAAWC,EAAAA,EAAAA,MAEjB,GAA0EC,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,aAAlFC,EAAR,EAAQA,SAAR,IAAkBC,UAAaC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,QAAWC,EAAlD,EAAkDA,aAAcC,EAAhE,EAAgEA,MAOhE,OACI,SAACC,EAAA,MAAD,CAAYC,QAAS,CAAEC,MAAO,EAAGC,QAAS,GAAKC,QAAS,CAAEF,MAAO,EAAGC,QAAS,GAAKE,WAAY,CAAEC,SAAU,IAA1G,UACI,UAACtB,EAAD,CAAMuB,SAAUT,GAPP,SAACU,GACdlB,EAASmB,EAAAA,EAAAA,SAAwBD,IACjCT,GACH,IAIO,WACI,SAACjB,EAAD,uCACA,UAACG,EAAD,mBAEI,SAACG,GAAD,QACIsB,KAAK,QACDhB,EAAS,OAAQ,CACjBiB,SAAU,mBACVC,UAAW,CACPC,MAAO,EACPC,QAAS,mDAIrB,SAAC,MAAD,CAAQC,MAAO,CAAEC,SAAU,WAAYC,IAAK,OAAQC,KAAM,OAASC,KAAM,SAE7E,SAACjC,EAAD,WACW,OAANU,QAAM,IAANA,OAAA,EAAAA,EAAQwB,QAAQ,SAAClC,EAAD,iBAAeU,QAAf,IAAeA,GAAf,UAAeA,EAAQwB,YAAvB,aAAe,EAAcN,aAElD,UAAC7B,EAAD,oBAEI,SAACG,GAAD,QACIsB,KAAK,SACDhB,EAAS,QAAS,CAClBiB,SAAU,oBACVU,QAAS,CACLR,MAAO,uJACPC,QAAS,uDAIrB,SAAC,MAAD,CAAcC,MAAO,CAAEC,SAAU,WAAYC,IAAK,OAAQC,KAAM,OAASC,KAAM,SAEnF,SAACjC,EAAD,WACW,OAANU,QAAM,IAANA,OAAA,EAAAA,EAAQ0B,SAAU,SAACpC,EAAD,iBAAeU,QAAf,IAAeA,GAAf,UAAeA,EAAQ0B,aAAvB,aAAe,EAAeR,aAErD,UAAC7B,EAAD,uBAEI,SAACG,GAAD,QACIsB,KAAK,YACDhB,EAAS,WAAY,CACrBiB,SAAU,uBACVU,QAAS,CACLR,MAAO,iEACPC,QAAS,SAIrB,SAAC,MAAD,CAAOC,MAAO,CAAEC,SAAU,WAAYC,IAAK,OAAQC,KAAM,OAASC,KAAM,SAE5E,SAACjC,EAAD,WACW,OAANU,QAAM,IAANA,OAAA,EAAAA,EAAQ2B,YACL,SAACrC,EAAD,WACI,UAACC,EAAD,YACI,yDACA,yDACA,mEACA,mEACA,gFAKfU,IACG,SAACR,EAAD,CAAQqB,KAAK,SAASc,GAAIxB,EAAAA,EAAAA,OAAeC,QAAS,CAAEE,QAAS,GAAKC,QAAS,CAAED,QAAS,GAAKE,WAAY,CAAEC,SAAU,GAAKmB,MAAO,IAA/H,gCAOnB,C","sources":["components/Pages/RegisterPage/RegisterPage.styled.jsx","components/Pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n    margin-top: 100px;\n    text-align: center;\n    color: #fff;\n`;\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 10px 20px;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-top: 9px;\n    position: relative;\n    color: #fff;\n`;\n\nexport const ErrorMessage = styled.div`\n    color: #fff;\n    font-size: 10px;\n    margin-top: 4px;\n    text-align: center;\n`;\n\nexport const ListError = styled.ul`\n    padding: 0;\n    list-style: none;\n`;\n\nexport const Input = styled.input`\n    display: block;\n    width: 295px;\n    margin-top: 5px;\n    padding: 0.375rem 38px;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #23282d;\n    background-color: #fff;\n    background-clip: padding-box;\n    border: 1px solid #ced4da;\n    appearance: none;\n    border-radius: 15px;\n    box-shadow: 0 0 5px 2px rgba(148, 148, 148, 0.75);\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    &:focus {\n        color: #23282d;\n        background-color: #fff;\n        border-color: #77abf8;\n        outline: 0;\n        box-shadow: 0 0 0 0.25rem rgb(13 110 253 / 25%);\n    }\n`;\n\nexport const Button = styled.button`\n    display: inline-block;\n    margin-top: 20px;\n    width: 200px;\n    padding: 5px 5px;\n    font-weight: 400;\n    line-height: 1.5;\n    text-transform: uppercase;\n    cursor: pointer;\n    color: #fff;\n    background-color: #23282d;\n    border: none;\n    border-radius: 20px;\n    box-shadow: 0 0 5px 2px rgba(148, 148, 148, 0.75);\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    &:active {\n        color: #fff;\n        background-color: #161a1e;\n        border-color: #1c1f23;\n        box-shadow: 0 0 0 0.25rem rgb(66 70 73 / 50%);\n    }\n`;","import { useDispatch } from \"react-redux\";\nimport { motion } from \"framer-motion\";\nimport authOperations from \"Redux/auth/auth-operations\";\nimport { useForm } from \"react-hook-form\";\nimport { GrMailOption, GrKey, GrUser } from \"react-icons/gr\";\nimport { Form, Label, Input, Button, ErrorMessage, ListError, Title } from \"./RegisterPage.styled\";\n\nconst Register = () => {\n    const dispatch = useDispatch();\n    \n    const { register, formState: { errors, isValid }, handleSubmit, reset } = useForm({ mode: \"onChange\" });\n\n    const onSubmit = (data) => {\n        dispatch(authOperations.register(data));\n        reset();\n    };\n\n    return (\n        <motion.div initial={{ scale: 0, opacity: 0 }} animate={{ scale: 1, opacity: 1 }} transition={{ duration: 0.9 }}>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Title>Hello! Please, Sign up!</Title>\n                <Label>\n                    Name\n                    <Input \n                        type=\"text\" \n                        {...register(\"name\", { \n                            required: \"Name is required\", \n                            minLength: { \n                                value: 3, \n                                message: \"Please enter correct name (min 3 letters)!\" \n                            },\n                        })} \n                    />\n                    <GrUser style={{ position: \"absolute\", top: \"35px\", left: \"8px\" }} size={25} />\n                </Label>\n                <ErrorMessage>\n                    {errors?.name && <ErrorMessage>{errors?.name?.message}</ErrorMessage>}\n                </ErrorMessage>\n                <Label>\n                    Email\n                    <Input \n                        type=\"email\" \n                        {...register(\"email\", { \n                            required: \"Email is required\", \n                            pattern: { \n                                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                message: \"Please enter a valid email (example@mail.com)!\" \n                            },\n                        })} \n                    />\n                    <GrMailOption style={{ position: \"absolute\", top: \"35px\", left: \"8px\" }} size={25} />\n                </Label>\n                <ErrorMessage>\n                    {errors?.email && (<ErrorMessage>{errors?.email?.message}</ErrorMessage>)}\n                </ErrorMessage>\n                <Label>\n                    Password\n                    <Input \n                        type=\"password\" \n                        {...register(\"password\", { \n                            required: \"Password is required\", \n                            pattern: { \n                                value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{6,15}$/,\n                                message: \"\" \n                            },\n                        })} \n                    />\n                    <GrKey style={{ position: \"absolute\", top: \"35px\", left: \"8px\" }} size={25} />\n                </Label>\n                <ErrorMessage>\n                    {errors?.password && (\n                        <ErrorMessage>\n                            <ListError>\n                                <li>At least 6 characters long.</li>\n                                <li>Contains at least 1 number.</li>\n                                <li>Contains at least 1 lowercase letter.</li>\n                                <li>Contains at least 1 uppercase letter.</li>\n                                <li>Contains a special character(!@#$%^&* _= +-)</li>\n                            </ListError>\n                        </ErrorMessage>\n                    )}\n                </ErrorMessage>\n                {isValid && (\n                    <Button type=\"submit\" as={motion.button} initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.9, delay: 0.1 }} >\n                        Create Account\n                    </Button>\n                )}\n            </Form>\n        </motion.div>\n    );\n};\n\nexport default Register;"],"names":["Title","styled","Form","Label","ErrorMessage","ListError","Input","Button","dispatch","useDispatch","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","motion","initial","scale","opacity","animate","transition","duration","onSubmit","data","authOperations","type","required","minLength","value","message","style","position","top","left","size","name","pattern","email","password","as","delay"],"sourceRoot":""}