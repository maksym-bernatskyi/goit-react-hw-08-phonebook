{"version":3,"file":"static/js/871.0a753a7e.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"layoutScroll\",\n    \"layoutRoot\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.5.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.5.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.5.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","startPress","latestProps","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}